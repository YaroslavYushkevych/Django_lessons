#command ORM in console line

Для роботи в консолі
python manage.py shell

обрати модель з якою будем працювати
from women.models import Women

Створити нове значення, але не додати в БД, бо запити "ліниві"
Women(title='Леся Українка', content='Біографія Лесі Українки')

Зберегти в БД ( _ - цей символ зберігає останній об'єкт)
w1 = _
w1.save()

w1 - вивести значення
w1.title - виведе значення відповідного поля
w1.id    - виведе значення відповідного поля

w1.pk - номер запису / значення primary key

пакет для з'єднань
from django.db import connection

Список виконаних запитів
connection.queries

Можна одразу передавати значення в клас
w2 = Women(title='Ліна Костенко', content='Біографія Ліни Костенко')

Так як запити ліниві, то є можливість спочатку їх об'явити, потім постіпово заповнювати, а вже потім їх додати до БД
w3 = Women()
w3.title = 'Соломія Крушельницька'
w3.content = 'Біографія Соломії Крушельницької'
w3.save()


МЕНЕДЖЕР ЗАПИСІВ objects
Women.objects

З його допомогою можна одразу додати запис
w4 = Women.objects.create(title='Наталія Полонська-Василенко', content='Біографія Наталії Полонської-Василенко')

Можем і без присвоєння до об'єкту
Women.objects.create(title='Марія Заньковецька', content='Біографія Марії Заньковецької')

Вивести всі дані з таблиці
Women.objects.all()

Магічний метод що дозволяє виводити зрозумілу інформацію
    def __str__(self):
        return self.title

Після внесення змін до моделі її треба перезапустити
exit()
python manage.py shell
from women.models import Women

Можна використовувати це як список
w = _
w[0]
w[0].title
w[0].content
len(w)

for wi in w:
     print(wi.title)

Women.objects.filter(title='Марія Заньковецька')

Звернення до id, тільки через pk - це гарний тон
Women.objects.filter(pk = 2)

Але якщо потрібно порівняти значення, то просто писати значення не можна - буде помилка
Women.objects.filter(pk > 2) - як от тут

Правильно так: додавати доповнення до назви змінної
Women.objects.filter(pk__gte=2) - більше або дорінює
Women.objects.filter(pk__lte=2) - менше або дорівнює

Коли потрібно взяти одний певний запис краще використати (ТІЛЬКИ ОДИН ЗАПИС)
Women.objects.get(pk=2)


СОРТУВАННЯ ЗАПИСІВ

всі значення де id <= 4 та сортування по назві
Women.objects.filter(pk__lte=4).order_by('title')

АБо просто відсортувати
Women.objects.order_by('title')

Відсортувати в зворотньому порядку (поставити знак "-" перед назвою атрибуту)
Women.objects.order_by('-title')

ЗМІНА ЗАПИСІВ
Спочатку можна прочитати, а потім змінити і зберегти змінену версію
wu = Women.objects.get(pk=2)
wu.title = 'Соломія Крушельницькаа'
wu.content = 'Біографія Соломії Крушельницькоїї'
wu.save()


ВИДАЛЕННЯ ЗАПИСІВ
Спочатку обираєм записи, а потім їх видаляєм
wd = Women.objects.filter(pk__gte=4)
wd.delete()